<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ConstructionManagement.system.mapper.OutStockApplyMapper">
  <resultMap id="BaseResultMap" type="com.ConstructionManagement.system.domain.OutStockApply">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="model" jdbcType="VARCHAR" property="model" />
    <result column="amount" jdbcType="BIGINT" property="amount" />
    <result column="apply_date" jdbcType="TIMESTAMP" property="applyDate" />
    <result column="applicant" jdbcType="VARCHAR" property="applicant" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, `name`, `type`, model, amount, apply_date, applicant, `status`
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from out_stock_apply
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectBySelective" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from out_stock_apply
    <where>
      <if test="name != null">
        and `name` like concat('', #{name}, '%')
      </if>
      <if test="type != null">
        and `type` =#{type}
      </if>
      <if test="model != null">
        and model like concat('', #{model}, '%')
      </if>
      <if test="applicant != null">
        and applicant= #{applicant}
      </if>
      <if test="applyDate != null">
        and   date_format(apply_date,'%y%m%d') &gt;= date_format(#{applyDate},'%y%m%d')
      </if>
    </where>
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from out_stock_apply
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByIds">
    delete from out_stock_apply
    where id in
    <foreach collection="array" item="id" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.ConstructionManagement.system.domain.OutStockApply" useGeneratedKeys="true">
    insert into out_stock_apply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="applyDate != null">
        apply_date,
      </if>
      <if test="applicant != null">
        applicant,
      </if>
      <if test="status != null">
        `status`,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="model != null">
        #{model,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=BIGINT},
      </if>
      <if test="applyDate != null">
        #{applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="applicant != null">
        #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ConstructionManagement.system.domain.OutStockApply">
    update out_stock_apply
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="model != null">
        model = #{model,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=BIGINT},
      </if>
      <if test="applyDate != null">
        apply_date = #{applyDate,jdbcType=TIMESTAMP},
      </if>
      <if test="applicant != null">
        applicant = #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>
